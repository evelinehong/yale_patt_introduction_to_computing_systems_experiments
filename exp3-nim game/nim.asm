.ORIG x3000

AND R1,R1,#0 ;PLAYER INDICATOR (0 = P1, 1 = P2)
AND R2,R2,#0 ;CLEAR R2
ADD R2,R2,#-8
ST R2,N8
ADD R2,R2,#3
ST R2,N5
ADD R2,R2,#2
ST R2,N3

LEA R0,ROWA	;Load ROWA into memory location A
ADD R0,R0,#10
ST R0,MEMA
LEA R0,ROWB	;Load ROWB into memory location B
ADD R0,R0,#12
ST R0,MEMB
LEA R0,ROWC	;Load ROWC into memory location C
ADD R0,R0,#15
ST R0,MEMC

INIT:
LEA R0,ROWA
LDR R0,R0,#7
BRnp PROMPT
LEA R0,ROWB
LDR R0,R0,#7
BRnp PROMPT
LEA R0,ROWC
LDR R0,R0,#7
BRz CHECKWINNER

PROMPT:
LEA R0,ROWA
TRAP x22
LD R0,NEWLINE
TRAP x21
LEA R0,ROWB
TRAP x22
LD R0,NEWLINE
TRAP x21
LEA R0,ROWC
TRAP x22
LD R0,NEWLINE
TRAP x21

CHECKPLAYER:
ADD R1,R1,#0
BRnp PL2

PL1:
LEA R0,P1
TRAP x22
BR INPUT

PL2:
LEA R0,P2
TRAP x22

INPUT:
AND R0,R0,#0
TRAP x20
ST R0,ROWINPUT
TRAP x21
TRAP x20
ST R0,ROCKSINPUT
TRAP x21
LD R0,NEWLINE
TRAP x21

CHECKROW:
LD R3,A
LD R4,ROWINPUT
ADD R3,R3,R4
BRz INPUTA
LD R3,B
ADD R3,R3,R4
BRz INPUTB
LD R3,C
ADD R3,R3,R4
BRz INPUTC
BRnp INVALIDSUB

INPUTA:
LD R2,N3
LD R3,MEMA	
JSR CALCULATE
ST R2,N3
ST R3,MEMA
NOT R1,R1
LD R0,NEWLINE
TRAP x21
BR INIT
	
INPUTB:
LD R2,N5
LD R3,MEMB
JSR CALCULATE
ST R2,N5
ST R3,MEMB
NOT R1,R1
LD R0,NEWLINE
TRAP x21
BR INIT
	
INPUTC:
LD R2,N8
LD R3,MEMC
JSR CALCULATE
ST R2,N8
ST R3,MEMC
NOT R1,R1
LD R0,NEWLINE
TRAP x21
BR INIT

INVALIDSUB:
LEA R0,INVALID
TRAP x22
LD R0,NEWLINE
TRAP x21
BR CHECKPLAYER

CHECKWINNER:	
ADD R1,R1,#0
BRnp P2WINS

P1WINS:
LEA R0,P1WIN	
TRAP x22
BR FIN

P2WINS:
LEA R0,P2WIN
TRAP x22
BR FIN

FIN HALT

;START SUBRTRAP x21INES

CALCULATE:
LD R4,ROCKSINPUT
ADD R4,R4,#-16
ADD R4,R4,#-16
ADD R4,R4,#-16
BRnz INVALIDSUB
ADD R2,R4,R2
BRp INVALIDSUB
NOT R4,R4
ADD R4,R4,#1
ADD R3,R3,R4
AND R5,R5,#0
STR R5,R3,#0
RET

;END SUBRTRAP x21INES

;START LABELS

N3	   .FILL x0000
N5	   .FILL x0000
N8	   .FILL x0000
MEMA	   .FILL x0000
MEMB	   .FILL x0000
MEMC	   .FILL x0000
ROWINPUT   .FILL X0000
ROCKSINPUT .FILL X0000
NEWLINE    .FILL x000A
A	   .FILL xFFBF
B	   .FILL xFFBE
C	   .FILL xFFBD
ROWA	   .STRINGZ "ROW A: ooo"
ROWB	   .STRINGZ "ROW B: ooooo"
ROWC	   .STRINGZ "ROW C: oooooooo"
P1	   .STRINGZ "Player 1, choose a row and number of rocks: "
P2	   .STRINGZ "Player 2, choose a row and number of rocks: "
INVALID	   .STRINGZ "Invalid move. Try again."
P1WIN	   .STRINGZ "Player 1 Wins."
P2WIN	   .STRINGZ "Player 2 Wins."

;END LABELS

.END